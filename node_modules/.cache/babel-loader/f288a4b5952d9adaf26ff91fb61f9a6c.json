{"ast":null,"code":"import _jsx from \"@babel/runtime/helpers/jsx\";\nimport React, { useState, createContext } from 'react';\nimport { appAxiosInstance } from // checkMobileDevice,\n// makeArrayOf,\n// getDateFormat\n'../utils'; // import { SIGN_IN_CHECK_URL, GET_CALL, POST_CALL } from 'AmendmentsConstants/api_endpoints'\n// import MockData from '../utils/mock/roundTrip.json'\n// import MockBaggage from './baggage2.json'\n// import MockConfirmation from './confirmation.json'\n// import MockTraveller from './traveller.json'\n\nexport var AppContext = createContext({\n  appHeader: '',\n  appSubHeader: ''\n});\nexport var AppState = function AppState(_ref) {\n  var children = _ref.children;\n\n  /*\n    States used in the context\n  */\n  var appHeader = 'Bouncy ka app';\n  var appSubHeader = 'Bouncy k app ka subheader';\n\n  var _useState = useState(''),\n      interpretedData = _useState[0],\n      setInterpretedData = _useState[1];\n\n  var _useState2 = useState(''),\n      dataUri = _useState2[0],\n      setDataUri = _useState2[1];\n\n  var _useState3 = useState(''),\n      croppedDataUri = _useState3[0],\n      setCroppedDataUri = _useState3[1];\n\n  var _useState4 = useState(false),\n      showCamera = _useState4[0],\n      updateCameraFlag = _useState4[1];\n\n  var _useState5 = useState(false),\n      showPreview = _useState5[0],\n      updatePreviewFlag = _useState5[1];\n\n  var _useState6 = useState(false),\n      showFileUpload = _useState6[0],\n      updateFileFlag = _useState6[1];\n\n  var _useState7 = useState(false),\n      showCode = _useState7[0],\n      updateCodeFlag = _useState7[1];\n\n  var _useState8 = useState(false),\n      showRun = _useState8[0],\n      updateRunFlag = _useState8[1];\n\n  var _useState9 = useState(false),\n      showOutput = _useState9[0],\n      updateOutputFlag = _useState9[1];\n\n  var _useState10 = useState(false),\n      apiError = _useState10[0],\n      setApiError = _useState10[1];\n\n  var _useState11 = useState([]),\n      apiErrorMessage = _useState11[0],\n      setApiErrorMessage = _useState11[1];\n\n  var _useState12 = useState(false),\n      pageLoader = _useState12[0],\n      setPageLoader = _useState12[1]; // const [dataUri, setDataUri] = useState('')\n\n\n  var baseUrl = 'http://ec2-18-136-213-158.ap-southeast-1.compute.amazonaws.com:9080';\n\n  var _useState13 = useState('C'),\n      selectedEnv = _useState13[0],\n      setSelectedEnv = _useState13[1]; // const [compileFailed, setCompileFailed] = useState(false)\n\n\n  var uploadSelectedPhoto = function uploadSelectedPhoto(payload) {\n    setPageLoader(true);\n    var apiUrl = baseUrl + \"/image/upload\";\n    setApiError(false);\n    appAxiosInstance(apiUrl, 'post', true, payload).then(function (res) {\n      setPageLoader(false);\n\n      if (res) {\n        setInterpretedData(res.data);\n        updateFileFlag(false);\n        updateCodeFlag(true);\n      }\n    }).catch(function (err) {\n      setPageLoader(false);\n      var message = 'Not able to upload the file. Only image file types are valid - jpg and png';\n\n      if (err.response.status === 400) {\n        message = 'Please select a file to upload.';\n      }\n\n      setApiError(true);\n      console.error(err);\n      setApiErrorMessage(message);\n    });\n  };\n\n  var compileCodeAPI = function compileCodeAPI(payload) {\n    setPageLoader(true);\n    var apiUrl = baseUrl + \"/code/compile\";\n    setApiError(false);\n    var random = Math.round(Math.random() * 1000);\n    payload.name = 'string' + random;\n    appAxiosInstance(apiUrl, 'post', false, payload).then(function (res) {\n      if (res) {\n        setPageLoader(false);\n        res.data = res.data.toString().split(/\\n/);\n        res.data.push(random);\n        setInterpretedData(res.data);\n        updateCodeFlag(false);\n\n        if (payload.language === 'JS') {\n          updateOutputFlag(true);\n        } else {\n          updateRunFlag(true);\n        }\n      }\n    }).catch(function (err) {\n      setPageLoader(false);\n      setApiError(true);\n      console.error(err);\n      var message = err.response.data.split(/\\n/);\n      setApiErrorMessage(message);\n    });\n  };\n\n  var runCodeAPI = function runCodeAPI(payload) {\n    setPageLoader(true);\n    var apiUrl = baseUrl + \"/code/run\";\n    setApiError(false);\n    appAxiosInstance(apiUrl, 'post', false, payload).then(function (res) {\n      setPageLoader(false);\n\n      if (res) {\n        res.data = res.data.toString().split(/\\n/);\n        if (selectedEnv === 'JS') res.data = res.data.splice(0, res.data.length - 1);\n        setInterpretedData(res.data);\n      }\n    }).catch(function (err) {\n      setPageLoader(false);\n      setApiError(true);\n      console.error(err);\n      var message = err.response.data.split(/\\n/);\n      setApiErrorMessage(message);\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    _jsx(AppContext.Provider, {\n      value: {\n        appHeader: appHeader,\n        appSubHeader: appSubHeader,\n        uploadSelectedPhoto: uploadSelectedPhoto,\n        interpretedData: interpretedData,\n        compileCodeAPI: compileCodeAPI,\n        runCodeAPI: runCodeAPI,\n        dataUri: dataUri,\n        setDataUri: setDataUri,\n        croppedDataUri: croppedDataUri,\n        setCroppedDataUri: setCroppedDataUri,\n        showCamera: showCamera,\n        updateCameraFlag: updateCameraFlag,\n        showPreview: showPreview,\n        updatePreviewFlag: updatePreviewFlag,\n        showFileUpload: showFileUpload,\n        updateFileFlag: updateFileFlag,\n        showCode: showCode,\n        updateCodeFlag: updateCodeFlag,\n        showRun: showRun,\n        updateRunFlag: updateRunFlag,\n        showOutput: showOutput,\n        updateOutputFlag: updateOutputFlag,\n        setInterpretedData: setInterpretedData,\n        apiError: apiError,\n        setApiError: setApiError,\n        apiErrorMessage: apiErrorMessage,\n        setApiErrorMessage: setApiErrorMessage,\n        selectedEnv: selectedEnv,\n        setSelectedEnv: setSelectedEnv,\n        pageLoader: pageLoader\n      }\n    }, void 0, children)\n  );\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(AppContext, \"AppContext\", \"/home/krishnamohan/projects/major/code_runner_ui/src/context/index.js\");\n\n  __REACT_HOT_LOADER__.register(AppState, \"AppState\", \"/home/krishnamohan/projects/major/code_runner_ui/src/context/index.js\");\n}();\n\n;","map":{"version":3,"sources":["/home/krishnamohan/projects/major/code_runner_ui/src/context/index.js"],"names":["React","useState","createContext","appAxiosInstance","AppContext","appHeader","appSubHeader","AppState","children","interpretedData","setInterpretedData","dataUri","setDataUri","croppedDataUri","setCroppedDataUri","showCamera","updateCameraFlag","showPreview","updatePreviewFlag","showFileUpload","updateFileFlag","showCode","updateCodeFlag","showRun","updateRunFlag","showOutput","updateOutputFlag","apiError","setApiError","apiErrorMessage","setApiErrorMessage","pageLoader","setPageLoader","baseUrl","selectedEnv","setSelectedEnv","uploadSelectedPhoto","payload","apiUrl","then","res","data","catch","err","message","response","status","console","error","compileCodeAPI","random","Math","round","name","toString","split","push","language","runCodeAPI","splice","length"],"mappings":"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","sourcesContent":["import React, { useState, createContext } from 'react'\nimport {\n  appAxiosInstance,\n  // checkMobileDevice,\n  // makeArrayOf,\n  // getDateFormat\n} from '../utils'\n// import { SIGN_IN_CHECK_URL, GET_CALL, POST_CALL } from 'AmendmentsConstants/api_endpoints'\n// import MockData from '../utils/mock/roundTrip.json'\n// import MockBaggage from './baggage2.json'\n// import MockConfirmation from './confirmation.json'\n// import MockTraveller from './traveller.json'\n\nexport const AppContext = createContext({\n  appHeader: '',\n  appSubHeader: '',\n})\n\nexport const AppState = ({ children }) => {\n  /*\n    States used in the context\n  */\n  const appHeader = 'Bouncy ka app'\n  const appSubHeader = 'Bouncy k app ka subheader'\n  const [interpretedData, setInterpretedData] = useState('')\n  const [dataUri, setDataUri] = useState('')\n  const [croppedDataUri, setCroppedDataUri] = useState('')\n  const [showCamera, updateCameraFlag] = useState(false)\n  const [showPreview, updatePreviewFlag] = useState(false)\n  const [showFileUpload, updateFileFlag] = useState(false)\n  const [showCode, updateCodeFlag] = useState(false)\n  const [showRun, updateRunFlag] = useState(false)\n  const [showOutput, updateOutputFlag] = useState(false)\n  const [apiError, setApiError] = useState(false)\n  const [apiErrorMessage, setApiErrorMessage] = useState([])\n  const [pageLoader, setPageLoader] = useState(false)\n  // const [dataUri, setDataUri] = useState('')\n  const baseUrl = 'http://ec2-18-136-213-158.ap-southeast-1.compute.amazonaws.com:9080'\n  const [selectedEnv, setSelectedEnv] = useState('C')\n  // const [compileFailed, setCompileFailed] = useState(false)\n\n  const uploadSelectedPhoto = payload => {\n    setPageLoader(true)\n    const apiUrl = `${baseUrl}/image/upload`\n    setApiError(false)\n    appAxiosInstance(apiUrl, 'post', true, payload)\n      .then(res => {\n        setPageLoader(false)\n        if (res) {\n          setInterpretedData(res.data)\n          updateFileFlag(false)\n          updateCodeFlag(true)\n        }\n      })\n      .catch(err => {\n        setPageLoader(false)\n        let message = 'Not able to upload the file. Only image file types are valid - jpg and png'\n        if (err.response.status === 400) {\n          message = 'Please select a file to upload.'\n        }\n        setApiError(true)\n        console.error(err)\n        setApiErrorMessage(message)\n      })\n  }\n\n  const compileCodeAPI = payload => {\n    setPageLoader(true)\n    const apiUrl = `${baseUrl}/code/compile`\n    setApiError(false)\n    var random = Math.round(Math.random()*1000)\n    payload.name = 'string' + random\n    appAxiosInstance(apiUrl, 'post', false, payload)\n      .then(res => {\n        if (res) {\n          setPageLoader(false)\n          res.data = res.data.toString().split(/\\n/)\n          res.data.push(random)\n          setInterpretedData(res.data)\n          updateCodeFlag(false)\n          if (payload.language === 'JS') {\n            updateOutputFlag(true)\n          } else {\n            updateRunFlag(true)\n          }\n        }\n      })\n      .catch(err => {\n        setPageLoader(false)\n        setApiError(true)\n        console.error(err)\n        const message = err.response.data.split(/\\n/)\n        setApiErrorMessage(message)\n      })\n  }\n\n  const runCodeAPI = payload => {\n    setPageLoader(true)\n    const apiUrl = `${baseUrl}/code/run`\n    setApiError(false)\n    appAxiosInstance(apiUrl, 'post', false, payload)\n      .then(res => {\n        setPageLoader(false)\n        if (res) {\n          res.data = res.data.toString().split(/\\n/)\n          if (selectedEnv === 'JS')\n            res.data = res.data.splice(0,res.data.length-1)\n          setInterpretedData(res.data)\n        }\n      })\n      .catch(err => {\n        setPageLoader(false)\n        setApiError(true)\n        console.error(err)\n        const message = err.response.data.split(/\\n/)\n        setApiErrorMessage(message)\n      })\n  }\n\n  return (\n    <AppContext.Provider\n      value={{\n        appHeader,\n        appSubHeader,\n        uploadSelectedPhoto,\n        interpretedData,\n        compileCodeAPI,\n        runCodeAPI,\n        dataUri,\n        setDataUri,\n        croppedDataUri,\n        setCroppedDataUri,\n        showCamera,\n        updateCameraFlag,\n        showPreview,\n        updatePreviewFlag,\n        showFileUpload,\n        updateFileFlag,\n        showCode,\n        updateCodeFlag,\n        showRun,\n        updateRunFlag,\n        showOutput,\n        updateOutputFlag,\n        setInterpretedData,\n        apiError,\n        setApiError,\n        apiErrorMessage,\n        setApiErrorMessage,\n        selectedEnv,\n        setSelectedEnv,\n        pageLoader\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}