{"ast":null,"code":"import _jsx from \"@babel/runtime/helpers/jsx\";\n\n/* eslint no-undef: \"error\" */\n\n/* eslint-env browser */\nimport React, { useState, useEffect } from 'react';\nimport * as _ from 'underscore';\nimport ReactCrop from 'react-image-crop';\nimport PageHeader from '../../Components/PageHeaders';\nimport CropIcon from '../../icons/crop.png';\nimport './imagePreview.css';\n\nvar ImagePreview = function ImagePreview(_ref) {\n  var dataUri = _ref.dataUri,\n      isFullscreen = _ref.isFullscreen,\n      setDataUri = _ref.setDataUri;\n  var classNameFullscreen = isFullscreen ? 'demo-image-preview-fullscreen' : '';\n\n  var _useState = useState({\n    x: 10,\n    y: 10,\n    height: 80,\n    width: 100\n  }),\n      crop = _useState[0],\n      updateCrop = _useState[1];\n\n  var paintNewCanvas = function paintNewCanvas(cr) {\n    var canvas = document.getElementById('canvasEl');\n    var ctx = canvas.getContext('2d'); // canvas.style.display = 'block'\n\n    var largeImg = document.getElementById('canvasEl');\n    var img = document.getElementsByClassName('ReactCrop__image')[0];\n    var heightMultFactor = largeImg.height / img.height;\n    var widthMultFactor = largeImg.width / img.width;\n    var coords = {\n      x1: cr.x * widthMultFactor,\n      y1: cr.y * heightMultFactor,\n      x2: (cr.width + cr.x) * widthMultFactor,\n      y2: (cr.height + cr.y) * heightMultFactor // canvas.style.display = 'none'\n\n    };\n    var imageData = ctx.getImageData(coords.x1, coords.y1, coords.x2, coords.y2);\n    var canvas1 = document.getElementById('canvasElCropPreview');\n    canvas1.width = cr.width * widthMultFactor;\n    canvas1.height = cr.height * heightMultFactor;\n    var ctx1 = canvas1.getContext('2d');\n    ctx1.rect(0, 0, cr.height, cr.width);\n    ctx1.fillStyle = 'white';\n    ctx1.fill();\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n    ctx1.putImageData(imageData, 0, 0);\n    var newDui = canvas1.toDataURL('image/png');\n    setDataUri(newDui);\n  };\n\n  var updateImageInCanvas = function updateImageInCanvas() {\n    var canvas = document.getElementById('canvasEl');\n    var ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    var image = new Image();\n\n    image.onload = function () {\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n      ctx.drawImage(image, 0, 0);\n    };\n\n    image.src = dataUri;\n    canvas.height = image.height;\n    canvas.width = image.width; // ctx.putImageData(image, 0, 0)\n    // const _base64ToArrayBuffer = (base64) => {\n    //   var binary_string = window.atob(base64);\n    //   var len = binary_string.length;\n    //   var bytes = new Uint8Array(len);\n    //   for (var i = 0; i < len; i++) {\n    //     bytes[i] = binary_string.charCodeAt(i);\n    //   }\n    //   return bytes.buffer;\n    // }\n    // console.log(dataUri.replace(\"data:image/png;base64,\", \"\"));\n    // console.log(_base64ToArrayBuffer(dataUri.replace(\"data:image/png;base64,\", \"\")));\n  };\n\n  var onCropChange = function onCropChange(cr) {\n    updateCrop(cr);\n\n    _.debounce(paintNewCanvas(cr), 1000);\n  };\n\n  useEffect(function () {\n    updateImageInCanvas(0, 0);\n  }, []);\n  return React.createElement(React.Fragment, null,\n  /*#__PURE__*/\n  _jsx(PageHeader, {\n    imageSrc: CropIcon,\n    title: \"Crop your image\",\n    subtitle: \"Drag the selector to choose the part of the image to be processed. Click on select to conitnue.\"\n  }),\n  /*#__PURE__*/\n  _jsx(\"div\", {\n    className: \"demo-image-preview mt-20 \" + classNameFullscreen\n  }, void 0,\n  /*#__PURE__*/\n  _jsx(ReactCrop, {\n    src: dataUri,\n    crop: crop,\n    onChange: onCropChange\n  }),\n  /*#__PURE__*/\n  _jsx(\"canvas\", {\n    id: \"canvasEl\",\n    style: {\n      display: 'none'\n    }\n  }),\n  /*#__PURE__*/\n  _jsx(\"canvas\", {\n    id: \"canvasElCropPreview\",\n    style: {\n      display: 'none'\n    }\n  })));\n};\n\nvar _default = ImagePreview;\nexport default _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(ImagePreview, \"ImagePreview\", \"/home/krishnamohan/projects/major/code_runner_ui/src/Containers/ImagePreview/index.jsx\");\n\n  __REACT_HOT_LOADER__.register(_default, \"default\", \"/home/krishnamohan/projects/major/code_runner_ui/src/Containers/ImagePreview/index.jsx\");\n}();\n\n;","map":{"version":3,"sources":["/home/krishnamohan/projects/major/code_runner_ui/src/Containers/ImagePreview/index.jsx"],"names":["React","useState","useEffect","_","ReactCrop","PageHeader","CropIcon","ImagePreview","dataUri","isFullscreen","setDataUri","classNameFullscreen","x","y","height","width","crop","updateCrop","paintNewCanvas","cr","canvas","document","getElementById","ctx","getContext","largeImg","img","getElementsByClassName","heightMultFactor","widthMultFactor","coords","x1","y1","x2","y2","imageData","getImageData","canvas1","ctx1","rect","fillStyle","fill","clearRect","putImageData","newDui","toDataURL","updateImageInCanvas","image","Image","onload","translate","scale","drawImage","src","onCropChange","debounce","display"],"mappings":"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","sourcesContent":["/* eslint no-undef: \"error\" */\n/* eslint-env browser */\nimport React, { useState, useEffect } from 'react'\nimport * as _ from 'underscore'\nimport ReactCrop from 'react-image-crop'\nimport PageHeader from '../../Components/PageHeaders'\nimport CropIcon from '../../icons/crop.png'\nimport './imagePreview.css'\n\nconst ImagePreview = ({ dataUri, isFullscreen, setDataUri }) => {\n  const classNameFullscreen = isFullscreen ? 'demo-image-preview-fullscreen' : ''\n  const [crop, updateCrop] = useState({\n    x: 10,\n    y: 10,\n    height: 80,\n    width: 100\n  })\n\n  const paintNewCanvas = cr => {\n    const canvas = document.getElementById('canvasEl')\n    const ctx = canvas.getContext('2d')\n    // canvas.style.display = 'block'\n    const largeImg = document.getElementById('canvasEl')\n    const img = document.getElementsByClassName('ReactCrop__image')[0]\n    const heightMultFactor = largeImg.height / img.height\n    const widthMultFactor = largeImg.width / img.width\n    const coords = {\n      x1: cr.x * widthMultFactor,\n      y1: cr.y * heightMultFactor,\n      x2: (cr.width + cr.x) * widthMultFactor,\n      y2: (cr.height + cr.y) * heightMultFactor\n    }\n    // canvas.style.display = 'none'\n    const imageData = ctx.getImageData(coords.x1, coords.y1, coords.x2, coords.y2)\n    const canvas1 = document.getElementById('canvasElCropPreview')\n    canvas1.width = cr.width * widthMultFactor\n    canvas1.height = cr.height * heightMultFactor\n    const ctx1 = canvas1.getContext('2d')\n    ctx1.rect(0, 0, cr.height, cr.width)\n    ctx1.fillStyle = 'white'\n    ctx1.fill()\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height)\n    ctx1.putImageData(imageData, 0, 0)\n    const newDui = canvas1.toDataURL('image/png')\n    setDataUri(newDui)\n  }\n\n  const updateImageInCanvas = () => {\n    const canvas = document.getElementById('canvasEl')\n    const ctx = canvas.getContext('2d')\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    const image = new Image()\n    image.onload = () => {\n      ctx.translate(canvas.width, 0)\n      ctx.scale(-1, 1)\n      ctx.drawImage(image, 0, 0)\n    }\n    image.src = dataUri\n    canvas.height = image.height\n    canvas.width = image.width\n    // ctx.putImageData(image, 0, 0)\n    // const _base64ToArrayBuffer = (base64) => {\n    //   var binary_string = window.atob(base64);\n    //   var len = binary_string.length;\n    //   var bytes = new Uint8Array(len);\n    //   for (var i = 0; i < len; i++) {\n    //     bytes[i] = binary_string.charCodeAt(i);\n    //   }\n    //   return bytes.buffer;\n    // }\n    // console.log(dataUri.replace(\"data:image/png;base64,\", \"\"));\n    // console.log(_base64ToArrayBuffer(dataUri.replace(\"data:image/png;base64,\", \"\")));\n  }\n\n  const onCropChange = cr => {\n    updateCrop(cr)\n    _.debounce(paintNewCanvas(cr), 1000)\n  }\n\n  useEffect(() => {\n    updateImageInCanvas(0, 0)\n  }, [])\n  return (\n    <>\n      <PageHeader\n        imageSrc={CropIcon}\n        title=\"Crop your image\"\n        subtitle=\"Drag the selector to choose the part of the image to be processed.\n        Click on select to conitnue.\"\n      />\n      <div className={`demo-image-preview mt-20 ${classNameFullscreen}`}>\n        {/* <img src={dataUri} alt=\"preview\" /> */}\n        <ReactCrop\n          src={dataUri}\n          crop={crop}\n          onChange={onCropChange}\n        />\n        <canvas\n          id=\"canvasEl\"\n          style={{ display: 'none' }}\n        />\n        <canvas\n          id=\"canvasElCropPreview\"\n          style={{ display: 'none' }}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default ImagePreview\n"]},"metadata":{},"sourceType":"module"}