{"ast":null,"code":"import _jsx from \"@babel/runtime/helpers/jsx\";\n\n/* eslint no-undef: \"error\" */\n\n/* eslint-env browser */\nimport React, { useContext } from 'react';\nimport { AppContext } from '../../context';\nimport PageHeader from '../../Components/PageHeaders';\nimport RunIcom from '../../icons/run.png';\n\nvar RunView = function RunView() {\n  var _useContext = useContext(AppContext),\n      interpretedData = _useContext.interpretedData,\n      runCodeAPI = _useContext.runCodeAPI,\n      updateCameraFlag = _useContext.updateCameraFlag,\n      updatePreviewFlag = _useContext.updatePreviewFlag,\n      updateCodeFlag = _useContext.updateCodeFlag,\n      showRun = _useContext.showRun,\n      updateRunFlag = _useContext.updateRunFlag,\n      updateOutputFlag = _useContext.updateOutputFlag,\n      selectedEnv = _useContext.selectedEnv;\n\n  var runCode = function runCode() {\n    updateCodeFlag(false);\n    updateCameraFlag(false);\n    updatePreviewFlag(false);\n    updateRunFlag(false);\n    updateOutputFlag(true);\n    var payload = {\n      code: 'string',\n      language: selectedEnv,\n      name: 'string'\n    };\n    runCodeAPI(payload);\n  };\n\n  return showRun ? /*#__PURE__*/_jsx(\"div\", {}, void 0, /*#__PURE__*/_jsx(PageHeader, {\n    imageSrc: RunIcom,\n    title: \"Code Preview\",\n    subtitle: \"Code compiled successfully. Looks like you're ready to run your code\"\n  }), /*#__PURE__*/_jsx(\"div\", {\n    className: \"code-preview\"\n  }, void 0, interpretedData.map(function (el) {\n    return /*#__PURE__*/_jsx(\"div\", {}, void 0, el);\n  })), /*#__PURE__*/_jsx(\"button\", {\n    type: \"button\",\n    className: \"Button--secondary\",\n    onClick: runCode\n  }, void 0, \"Run\")) : null;\n};\n\nvar _default = RunView;\nexport default _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(RunView, \"RunView\", \"/home/krishnamohan/projects/major/Coderunner/src/Containers/RunView/index.jsx\");\n\n  __REACT_HOT_LOADER__.register(_default, \"default\", \"/home/krishnamohan/projects/major/Coderunner/src/Containers/RunView/index.jsx\");\n}();\n\n;","map":{"version":3,"sources":["/home/krishnamohan/projects/major/Coderunner/src/Containers/RunView/index.jsx"],"names":["React","useContext","AppContext","PageHeader","RunIcom","RunView","interpretedData","runCodeAPI","updateCameraFlag","updatePreviewFlag","updateCodeFlag","showRun","updateRunFlag","updateOutputFlag","selectedEnv","runCode","payload","code","language","name","map","el"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,oBAWhBJ,UAAU,CAACC,UAAD,CAXM;AAAA,MAElBI,eAFkB,eAElBA,eAFkB;AAAA,MAGlBC,UAHkB,eAGlBA,UAHkB;AAAA,MAIlBC,gBAJkB,eAIlBA,gBAJkB;AAAA,MAKlBC,iBALkB,eAKlBA,iBALkB;AAAA,MAMlBC,cANkB,eAMlBA,cANkB;AAAA,MAOlBC,OAPkB,eAOlBA,OAPkB;AAAA,MAQlBC,aARkB,eAQlBA,aARkB;AAAA,MASlBC,gBATkB,eASlBA,gBATkB;AAAA,MAUlBC,WAVkB,eAUlBA,WAVkB;;AAapB,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBL,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,QAAMG,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAE,QADQ;AAEdC,MAAAA,QAAQ,EAAEJ,WAFI;AAGdK,MAAAA,IAAI,EAAE;AAHQ,KAAhB;AAKAZ,IAAAA,UAAU,CAACS,OAAD,CAAV;AACD,GAZD;;AAcA,SACiBL,OADjB,gBAEI,qCACE,KAAC,UAAD;AACE,IAAA,QAAQ,EAAEP,OADZ;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,QAAQ,EAAC;AAHX,IADF,eAOE;AAAK,IAAA,SAAS,EAAC;AAAf,aACGE,eAAe,CAACc,GAAhB,CAAoB,UAAAC,EAAE;AAAA,wBACrB,wBAAMA,EAAN,CADqB;AAAA,GAAtB,CADH,CAPF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,OAAO,EAAEN;AAHX,mBAZF,CAFJ;AAwBD,CAnDD;;eAqDeV,O;AAAf;;;;;;;;gCArDMA,O","sourcesContent":["/* eslint no-undef: \"error\" */\n/* eslint-env browser */\nimport React, { useContext } from 'react'\nimport { AppContext } from '../../context'\nimport PageHeader from '../../Components/PageHeaders'\nimport RunIcom from '../../icons/run.png'\n\nconst RunView = () => {\n  const {\n    interpretedData,\n    runCodeAPI,\n    updateCameraFlag,\n    updatePreviewFlag,\n    updateCodeFlag,\n    showRun,\n    updateRunFlag,\n    updateOutputFlag,\n    selectedEnv\n  } = useContext(AppContext)\n\n  const runCode = () => {\n    updateCodeFlag(false)\n    updateCameraFlag(false)\n    updatePreviewFlag(false)\n    updateRunFlag(false)\n    updateOutputFlag(true)\n    const payload = {\n      code: 'string',\n      language: selectedEnv,\n      name: 'string'\n    }\n    runCodeAPI(payload)\n  }\n\n  return (\n    <If condition={showRun}>\n      <div>\n        <PageHeader\n          imageSrc={RunIcom}\n          title=\"Code Preview\"\n          subtitle=\"Code compiled successfully.\n          Looks like you're ready to run your code\"\n        />\n        <div className=\"code-preview\">\n          {interpretedData.map(el => (\n            <div>{el}</div>\n          ))}\n        </div>\n        <button\n          type=\"button\"\n          className=\"Button--secondary\"\n          onClick={runCode}\n        >\n          Run\n        </button>\n      </div>\n    </If>\n  )\n}\n\nexport default RunView\n"]},"metadata":{},"sourceType":"module"}