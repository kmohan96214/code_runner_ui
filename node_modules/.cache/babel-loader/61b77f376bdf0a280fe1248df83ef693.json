{"ast":null,"code":"import _jsx from \"@babel/runtime/helpers/jsx\";\n\n/* eslint no-undef: \"error\" */\n\n/* eslint-env browser */\nimport React, { useContext } from 'react';\nimport PageLoader from 'Lib/Pageloader';\nimport { AppContext } from '../../context';\nimport PageHeader from '../../Components/PageHeaders';\nimport RunIcom from '../../icons/run.png';\n\nvar RunView = function RunView() {\n  var _useContext = useContext(AppContext),\n      interpretedData = _useContext.interpretedData,\n      runCodeAPI = _useContext.runCodeAPI,\n      updateCameraFlag = _useContext.updateCameraFlag,\n      updatePreviewFlag = _useContext.updatePreviewFlag,\n      updateCodeFlag = _useContext.updateCodeFlag,\n      showRun = _useContext.showRun,\n      updateRunFlag = _useContext.updateRunFlag,\n      updateOutputFlag = _useContext.updateOutputFlag,\n      selectedEnv = _useContext.selectedEnv,\n      pageLoader = _useContext.pageLoader;\n\n  var runCode = function runCode() {\n    updateCodeFlag(false);\n    updateCameraFlag(false);\n    updatePreviewFlag(false);\n    updateRunFlag(false);\n    updateOutputFlag(true);\n    var payload = {\n      code: 'string',\n      language: selectedEnv,\n      name: 'string' + interpretedData.slice(-1)[0]\n    };\n    runCodeAPI(payload);\n  };\n\n  return React.createElement(React.Fragment, null, showRun ?\n  /*#__PURE__*/\n  _jsx(\"div\", {}, void 0,\n  /*#__PURE__*/\n  _jsx(PageHeader, {\n    imageSrc: RunIcom,\n    title: \"Code Preview\",\n    subtitle: \"Code compiled successfully. Looks like you're ready to run your code\"\n  }),\n  /*#__PURE__*/\n  _jsx(\"div\", {\n    className: \"code-preview\"\n  }, void 0, interpretedData.slice(0, -1).map(function (el) {\n    return (\n      /*#__PURE__*/\n      _jsx(\"div\", {}, void 0, el)\n    );\n  })),\n  /*#__PURE__*/\n  _jsx(\"button\", {\n    type: \"button\",\n    className: \"Button--secondary\",\n    onClick: runCode\n  }, void 0, \"Run\")) : null, pageLoader ?\n  /*#__PURE__*/\n  _jsx(PageLoader, {\n    title: \"Uploading your code\",\n    message: \"Please wait while we get the output\"\n  }) : null);\n};\n\nvar _default = RunView;\nexport default _default;\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(RunView, \"RunView\", \"/home/krishnamohan/projects/major/code_runner_ui/src/Containers/RunView/index.jsx\");\n\n  __REACT_HOT_LOADER__.register(_default, \"default\", \"/home/krishnamohan/projects/major/code_runner_ui/src/Containers/RunView/index.jsx\");\n}();\n\n;","map":{"version":3,"sources":["/home/krishnamohan/projects/major/code_runner_ui/src/Containers/RunView/index.jsx"],"names":["React","useContext","PageLoader","AppContext","PageHeader","RunIcom","RunView","interpretedData","runCodeAPI","updateCameraFlag","updatePreviewFlag","updateCodeFlag","showRun","updateRunFlag","updateOutputFlag","selectedEnv","pageLoader","runCode","payload","code","language","name","slice","map","el"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,oBAYhBL,UAAU,CAACE,UAAD,CAZM;AAAA,MAElBI,eAFkB,eAElBA,eAFkB;AAAA,MAGlBC,UAHkB,eAGlBA,UAHkB;AAAA,MAIlBC,gBAJkB,eAIlBA,gBAJkB;AAAA,MAKlBC,iBALkB,eAKlBA,iBALkB;AAAA,MAMlBC,cANkB,eAMlBA,cANkB;AAAA,MAOlBC,OAPkB,eAOlBA,OAPkB;AAAA,MAQlBC,aARkB,eAQlBA,aARkB;AAAA,MASlBC,gBATkB,eASlBA,gBATkB;AAAA,MAUlBC,WAVkB,eAUlBA,WAVkB;AAAA,MAWlBC,UAXkB,eAWlBA,UAXkB;;AAcpB,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBN,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAG,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,QAAMI,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAE,QADQ;AAEdC,MAAAA,QAAQ,EAAEL,WAFI;AAGdM,MAAAA,IAAI,EAAE,WAAWd,eAAe,CAACe,KAAhB,CAAsB,CAAC,CAAvB,EAA0B,CAA1B;AAHH,KAAhB;AAKAd,IAAAA,UAAU,CAACU,OAAD,CAAV;AACD,GAZD;;AAcA,SACE,0CACiBN,OADjB;AAAA;AAEI;AAAA;AACE,OAAC,UAAD;AACE,IAAA,QAAQ,EAAEP,OADZ;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,QAAQ,EAAC;AAHX,IADF;AAAA;AAOE;AAAK,IAAA,SAAS,EAAC;AAAf,aACGE,eAAe,CAACe,KAAhB,CAAsB,CAAtB,EAAwB,CAAC,CAAzB,EAA4BC,GAA5B,CAAgC,UAAAC,EAAE;AAAA;AAAA;AACjC,8BAAMA,EAAN;AADiC;AAAA,GAAlC,CADH,CAPF;AAAA;AAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,OAAO,EAAEP;AAHX,mBAZF,CAFJ,SAuBiBD,UAvBjB;AAAA;AAwBI,OAAC,UAAD;AACE,IAAA,KAAK,EAAC,qBADR;AAEE,IAAA,OAAO,EAAC;AAFV,IAxBJ,QADF;AAgCD,CA5DD;;eA8DeV,O;AAAf;;;;;;;;gCA9DMA,O","sourcesContent":["/* eslint no-undef: \"error\" */\n/* eslint-env browser */\nimport React, { useContext } from 'react'\nimport PageLoader from 'Lib/Pageloader'\nimport { AppContext } from '../../context'\nimport PageHeader from '../../Components/PageHeaders'\nimport RunIcom from '../../icons/run.png'\n\nconst RunView = () => {\n  const {\n    interpretedData,\n    runCodeAPI,\n    updateCameraFlag,\n    updatePreviewFlag,\n    updateCodeFlag,\n    showRun,\n    updateRunFlag,\n    updateOutputFlag,\n    selectedEnv,\n    pageLoader\n  } = useContext(AppContext)\n\n  const runCode = () => {\n    updateCodeFlag(false)\n    updateCameraFlag(false)\n    updatePreviewFlag(false)\n    updateRunFlag(false)\n    updateOutputFlag(true)\n    const payload = {\n      code: 'string',\n      language: selectedEnv,\n      name: 'string' + interpretedData.slice(-1)[0]\n    }\n    runCodeAPI(payload)\n  }\n\n  return (\n    <>\n      <If condition={showRun}>\n        <div>\n          <PageHeader\n            imageSrc={RunIcom}\n            title=\"Code Preview\"\n            subtitle=\"Code compiled successfully.\n            Looks like you're ready to run your code\"\n          />\n          <div className=\"code-preview\">\n            {interpretedData.slice(0,-1).map(el => (\n              <div>{el}</div>\n            ))}\n          </div>\n          <button\n            type=\"button\"\n            className=\"Button--secondary\"\n            onClick={runCode}\n          >\n            Run\n          </button>\n        </div>\n      </If>\n      <If condition={pageLoader}>\n        <PageLoader\n          title=\"Uploading your code\"\n          message=\"Please wait while we get the output\"\n        />\n      </If>\n    </>\n  )\n}\n\nexport default RunView\n"]},"metadata":{},"sourceType":"module"}