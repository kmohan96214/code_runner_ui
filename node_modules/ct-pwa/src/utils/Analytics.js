/*eslint-disable*/
import ClevertapReact from 'clevertap-react'
// import { DOMAIN } from "../"

import {
  getTravelerParams,
  getNumbersOfNightsAndDayName,
  readCookie,
  getAgeOfChildren
} from 'Utils/hotels'

import {
  path,
  getLanguageMeta
} from 'Utils'
const {
  CLEVERTAP_KEY
} = process.env.keys

class Analytics {
  constructor() {
    this.enabled = false
    if (CLEVERTAP_KEY) {
      this.enabled = true
      ClevertapReact.initialize(CLEVERTAP_KEY)
    }
  }
  event = (name, payload = {}) => {
    if (this.enabled) {
      const domain = path(['location', 'hostname'], window)
      payload.platform = 'PWA'
      payload.domainName = domain || 'NA'
      setTimeout(() => {
        ClevertapReact.event(name, payload)
      }, 300)
    }
  }
  profile = payload => {
    if (this.enabled) {
      ClevertapReact.profile(payload)
    }
  }
  logout = () => {
    if (this.enabled) {
      ClevertapReact.logout()
    }
  }
}

export const detailsPageClaverTap = (eventName, payload = {}, specificProperties = {}) => {
  let travelerParams = {};
  if (payload.roomAllocations) {
    travelerParams = getTravelerParams(payload.roomAllocations)
  }

  var numberOfNight = dayOfWeekCheckIn = 0;
  let chkIn = payload.chkIn || payload.checkInDate
  let chkOut = payload.chkOut || payload.checkOutDate
  if (chkIn && chkOut) {
    var {
      numberOfNight,
      dayOfWeekCheckIn
    } = getNumbersOfNightsAndDayName(chkOut, chkIn);
    var {
      numberOfNight: numberOfDx
    } = getNumbersOfNightsAndDayName(chkIn, new Date());
  }
  let defaultPayload = {
    destinationCity: payload.city || "NA",
    destinationCountry: payload.country || 'NA',
    dx: numberOfDx + 1 || 'NA',
    numRooms: travelerParams.num_rooms || 'NA',
    roomNights: numberOfNight * travelerParams.num_rooms || 'NA',
    los: numberOfNight || 'NA',
    dayOfWeekCheckIn: dayOfWeekCheckIn || 'NA',
    numAdults: travelerParams.adults || 'NA',
    numChild: travelerParams.childs || 'NA',
    currencySelected: payload.currency || getLanguageMeta().currency || 'NA',
    userSignedInStatus: readCookie('userid') ? 'Yes' : 'No',
    userCity: 'NA',
    networkType: 'NA',
    childAge: 'NA',
    shortlistedCount: 'NA',
    selectedDestination: 'NA',
    dealOfTheDayApplicable: 'NA',
    totalHotelsCount: 'NA',
    UnavailableHotelsCount: 'NA',
    totalDealsCount: payload.offers && payload.offers.length || 'NA',
    taReviewsCount: payload.tripAdvisorReviewCount || payload.totalUserReviewCount || 'NA',
    taRating: payload.tripAdvisorRating || payload.medianRating || 'NA',
    featuredRank: 'NA',
    hasTags: (payload.tags && payload.tags.length) ? 1 : 0,
    numTags: payload.tags ? payload.tags.length : 0,
    tagsSelected: specificProperties.tagValue ? 1 : 'NA',
    numTagsSelected: specificProperties.tagValue ? 1 : 'NA',
    userRank: 'NA',
    starRating: payload.starRating || 'NA',
    connector: 'NA',
    hotelID: payload.id || payload.hotelId || 'NA',
    hotelType: (payload.country !== 'IN') ? 'International' : 'India',
    bestSeller: 'NA',
    taCertificateOfExcellence: 'NA',
    utmSource: payload.utm_source || 'Organic'
  }
  const AnalyticsObject = new Analytics()
  AnalyticsObject.event(eventName, {
    ...defaultPayload,
    ...specificProperties
  })
}

export const resultPageClaverTap = (eventName, payload = {}, specificProperties = {}) => {
  var numberOfNight = dayOfWeekCheckIn = 0;
  let chkIn = payload.chk_in || payload.checkInDate
  let chkOut = payload.chk_out || payload.checkOutDate
  const childAgeString = getAgeOfChildren(payload).join('+');
  if (chkIn && chkOut) {
    var {
      numberOfNight,
      dayOfWeekCheckIn
    } = getNumbersOfNightsAndDayName(chkOut, chkIn);
    var {
      numberOfNight: numberOfDx
    } = getNumbersOfNightsAndDayName(chkIn, new Date());
  }
  let defaultPayload = {
    destinationCity: payload.city || "NA",
    destinationCountry: payload.country || 'NA',
    dx: numberOfDx + 1 || 'NA',
    numRooms: payload.num_rooms || 'NA',
    roomNights: numberOfNight || 'NA',
    los: 'NA',
    dayOfWeekCheckIn: dayOfWeekCheckIn || 'NA',
    numAdults: payload.adults || 'NA',
    numChild: payload.childs || 'NA',
    currencySelected: getLanguageMeta().currency || 'NA',
    userSignedInStatus: readCookie('userid') ? 'Yes' : 'No',
    userCity: 'NA',
    networkType: 'NA',
    childAge: childAgeString || 'NA',
    shortlistedCount: 'NA',
    selectedDestination: payload.destinationName ? payload.destinationName : payload.city,
    totalHotelsCount: payload.totalCount ? payload.totalCount : 'NA',
    UnavailableHotelsCount: 'NA',
    numTotalTags: 'NA',
    utmSource: payload.utm_source || 'Organic'
  }
  const AnalyticsObject = new Analytics()
  AnalyticsObject.event(eventName, {
    ...defaultPayload,
    ...specificProperties
  })
}

const AnalyticsObject = new Analytics()
export default AnalyticsObject