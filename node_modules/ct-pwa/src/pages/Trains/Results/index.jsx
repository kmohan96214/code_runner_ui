import React from 'react'

import { Summary } from 'Lib/Subheader'
import Header from 'Lib/Header'
import ResultsContainer from 'Containers/Trains/Results'

import { path, fromQueryString, formatDate, trainClassMap } from 'Utils'

const Results = props => {
  const params = path(['location', 'search'], props).slice(1)
  const data = fromQueryString(params)
  const processedData = {}
  data.adults = parseInt(data.adults, 10)
  data.children = parseInt(data.children, 10)
  data.srMen = parseInt(data.srMen, 10)
  data.srWomen = parseInt(data.srWomen, 10)
  processedData.departOn = parseInt(data.departOn, 10)
  processedData.origin = { code: data.oCode, station: data.oStation }
  processedData.destination = { code: data.dCode, station: data.dStation }
  processedData.travellers = {
    adults: data.adults,
    children: data.children,
    srMen: data.srMen,
    srWomen: data.srWomen
  }
  processedData.tClass = data.tClass
  const totalTravellers =
    data.adults + data.children + data.srMen + data.srWomen
  const travellersText = `${totalTravellers} traveller${
    totalTravellers > 1 ? 's' : ''
  }`
  const formattedDate = formatDate(data.departOn)
  const pageTitle = `${processedData.origin.station} â†’ ${
    processedData.destination.station
  }`
  const trainClassText = trainClassMap(data.tClass).value
  const pageSubtitle = `${formattedDate}  |  ${trainClassText}  |  ${travellersText}`
  const summaryComponent = [
    <Header menu={true} />,
    <Summary title={pageTitle} subtitle={pageSubtitle} />
  ]
  return (
    <ResultsContainer
      query={processedData}
      summaryComponent={summaryComponent}
    />
  )
}

Results.displayName = 'Trains(ResultsPage)'

export default Results
