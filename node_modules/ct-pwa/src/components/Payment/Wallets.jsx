import React, { Component } from 'react'
import PropTypes from 'prop-types'
import { List, ListItem } from 'Lib/List'
import { RadioList, RadioItem } from 'Lib/Radio'
import { SectionHeader } from 'Lib/Text'

import Paytm from './images/wallets/paytm@2x.png'
import Amazon from './images/wallets/AMAZON_WALLET@2x.png'
import Ola from './images/wallets/olalogo.png'
import PayU from './images/wallets/payU@2x.png'
import Hdfc from './images/wallets/payzapp-small.png'
import PhonePe from './images/wallets/Phonepe@2x.png'
import Masterpass from './images/wallets/masterpass@2x.png'

class Wallets extends Component {
  static propTypes = {
    thirdPartyWallets: PropTypes.arrayOf(PropTypes.object),
    thirdPartyUPI: PropTypes.arrayOf(PropTypes.object),
    onWalletChange: PropTypes.func,
    selectedWallet: PropTypes.string
  }

  static defaultProps = {
    thirdPartyWallets: [],
    thirdPartyUPI: [],
    onWalletChange: () => {},
    selectedWallet: ''
  }

  componentDidMount() {
    if (!this.props.walletCompany) {
      const {
        thirdPartyWallets: [firstWallet]
      } = this.props
      if (firstWallet) {
        this._handleWalletChange(firstWallet.value)
      }
    }
  }

  shouldComponentUpdate(nextProps) {
    return nextProps.selectedWallet !== this.props.selectedWallet
  }

  _getWalletImage = (walletType, walletName) => {
    let wallet
    let isImage = true
    switch (walletType) {
      case 'PAYTM_WALLET':
        wallet = Paytm
        break
      case 'AMAZON_WALLET':
        wallet = Amazon
        break
      case 'PAYU_WALLET':
        wallet = PayU
        break
      case 'HDFC_WALLET':
        wallet = Hdfc
        break
      case 'PHONEPE':
        wallet = PhonePe
        break
      case 'OLA_WALLET':
        wallet = Ola
        break
      case 'MASTERPASS_WALLET':
        wallet = Masterpass
        break
      default:
        wallet = false
        break
    }
    if (wallet) {
      if (isImage) {
        return <img src={wallet} alt="Card" width={63} className="mr-10" />
      } else {
        return wallet
      }
    }
    return <span>{walletName}</span>
  }

  _isUPIWallet = value => {
    const { thirdPartyUPI = [] } = this.props
    return thirdPartyUPI.find(upi => upi.value === value)
  }

  _handleWalletChange = value => {
    this.props.onWalletChange({
      walletCompany: value,
      walletType: this._isUPIWallet(value) ? 'up' : 'tw'
    })
  }

  render() {
    const { thirdPartyWallets, thirdPartyUPI, selectedWallet } = this.props
    if (!thirdPartyWallets.length && !thirdPartyUPI.length) {
      return null
    }

    return (
      <React.Fragment>
        <SectionHeader>Wallets</SectionHeader>
        <List className="mt-10">
          <ListItem>
            <RadioList
              className="BankList bt-0"
              onChange={this._handleWalletChange}
              value={selectedWallet}
            >
              {thirdPartyWallets.map(wallet => {
                return (
                  <RadioItem
                    className="BankList__item"
                    value={wallet.value}
                    key={`tw_${wallet.value}`}
                  >
                    {() => this._getWalletImage(wallet.value, wallet.name)}
                  </RadioItem>
                )
              })}
              {thirdPartyUPI.map(upi => {
                return (
                  <RadioItem
                    className="BankList__item"
                    value={upi.value}
                    key={`upi_${upi.value}`}
                  >
                    {() => this._getWalletImage(upi.value, upi.name)}
                  </RadioItem>
                )
              })}
            </RadioList>
          </ListItem>
        </List>
      </React.Fragment>
    )
  }
}

export default Wallets
