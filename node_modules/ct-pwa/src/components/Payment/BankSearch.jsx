import React, { Component } from 'react'
import PropTypes from 'prop-types'

import Autocomplete from 'Lib/Autocomplete'
import { List, ListItem } from 'Lib/List'

import { sortCollection } from 'Utils'

class BankSearch extends Component {
  constructor(params) {
    const data = sortCollection(params.data, 'name')
    super(params)
    this.state = {
      value: '',
      data,
      original: data
    }
  }

  _renderItem = item => {
    return (
      <ListItem
        className="h-48 flex flex-middle"
        key={item.name}
        enableRipple={true}
      >
        <p>{item.name}</p>
      </ListItem>
    )
  }

  _renderMenu = (items, value) => {
    return <List>{items}</List>
  }

  _handleInput = (value, inputName, event) => {
    this.setState({ value })
    let newData
    if (value.length > 1) {
      const lValue = value.toLowerCase()
      const filterSearchedData = bank =>
        bank.name.toLowerCase().includes(lValue)
      newData = this.state.original.filter(filterSearchedData)
    } else {
      newData = this.state.original
    }
    this.setState({ data: newData })
  }

  render() {
    const { data: dataFromProps } = this.props
    const { data: dataFromState } = this.state
    const { value } = this.state
    const data = value ? dataFromState : dataFromProps
    return (
      <Autocomplete
        isOpen={this.props.isOpen}
        title={this.props.title}
        onClose={this.props.onClose}
        autoFocus={true}
        focusDelay={305}
        placeHolder="Search banks"
        value={value}
        data={data}
        onSelect={this.props.onSelect}
        onChange={this._handleInput}
        renderItem={this._renderItem}
        renderMenu={this._renderMenu}
        popularData={this.props.popularData}
        recentData={this.props.recentData}
      />
    )
  }
}

BankSearch.propTypes = {
  /**
   * The items to display in the dropdown menu
   */
  data: PropTypes.arrayOf(PropTypes.object), // eslint-disable-line react/no-unused-prop-types
  /**
   * The popular items to display in the dropdown menu
   */
  popularData: PropTypes.arrayOf(PropTypes.object),
  /**
   * The recently searched items to display in the dropdown menu
   */
  recentData: PropTypes.arrayOf(PropTypes.object),
  /**
   * Arguments: `value: String, item: Any`
   *
   * Invoked when the user selects an item from the dropdown menu.
   */
  onSelect: PropTypes.func,
  isOpen: PropTypes.bool.isRequired,
  title: PropTypes.string.isRequired,
  onClose: PropTypes.func.isRequired
}

BankSearch.defaultProps = {
  onSelect: null,
  data: [],
  popularData: [],
  recentData: []
}

export default BankSearch
