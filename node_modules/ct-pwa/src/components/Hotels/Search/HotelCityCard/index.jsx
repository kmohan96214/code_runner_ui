import React, { Fragment } from 'react'
import { Link } from 'react-router'
import PropTypes from 'prop-types'

import { Truncate } from 'Lib/Text'

const renderHotelCityCard = (name, description) => {
	return (
		<div className="p-absolute b-0 w-100p l-0 pl-10 pb-10 flex flex-right flex-column" style={{
			backgroundImage: `linear-gradient(to top, rgba(0,0,0,1), rgba(0,0,0,0))`,
			left: '0px',
			minHeight: '54px'
		}}>
			<h4 className=" break-w fs-16 fw-500 lh-title p-truncate-2 c-white">
				{name.split(/(\n)/).map((item, key) => {
					return <div key={key}>{item}</div>
				})}
			</h4>
			<p className="fs-12 lh-copy c-black-60 c-white pt-4">{description}</p>
		</div>
	)
}

const HotelCityCard = props => {
	const imageStyles = {
		height: `calc(50vw - 22px)`,
		flexShrink: '0',
		backgroundSize: 'cover',
		backgroundColor: '#eaeaea',
		backgroundImage: `url("${props.image}")`,
		overflow: 'hidden',
		width: `calc(50% - 6px)`
	}

	const { name, description, url, isExternalUrl } = props

	return (
		<Fragment>
			{url && isExternalUrl && <a href={url} className="br2 flex-inline mb-12 pl-10 pb-10 p-relative" style={imageStyles}>
				{renderHotelCityCard(name, description)}
			</a>}
			{url && !isExternalUrl && <Link to={url} className="br2 flex-inline mb-12 pl-10 pb-10 p-relative" style={imageStyles}>
				{renderHotelCityCard(name, description)}
			</Link>}
			{!url && <div className="br2 flex-inline mb-12 pl-10 pb-10 p-relative" style={imageStyles}>
				{renderHotelCityCard(name, description)}
			</div>}
		</Fragment>
	)
}

HotelCityCard.propTypes = {
	name: PropTypes.string.isRequired,
	description: PropTypes.string,
	image: PropTypes.string,
	url: PropTypes.string,
	isExternalUrl: PropTypes.boolean,
}

HotelCityCard.defaultProps = {
	name: '',
	description: '',
	image: '',
	url: '',
	isExternalUrl: false
}

export default HotelCityCard
