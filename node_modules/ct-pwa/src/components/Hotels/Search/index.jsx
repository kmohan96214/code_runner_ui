/*eslint-disable */
import React, { PureComponent } from 'react'
import Button from 'Lib/Buttons'
import PropTypes from 'prop-types'
import { isEmpty } from 'Utils'
import { _getDate } from 'Utils/hotels'

class Search extends PureComponent {
  state = {
    animate: {
      city: false,
      chkIn: false,
      travellers: false
    },
    error: {
      city: false,
      chkIn: false,
      travellers: false
    }
  }
  validateHotelSearchForm = event => {
    const { city, checkIn } = this.props
    const state = { animate: {}, error: {} }
    const currDate = new Date()
    let isToastVisible = false
    const isOldDate = () => {
      currDate.setHours(0, 0, 0, 0)
      return _getDate(checkIn).getTime() < currDate.getTime()
    }

    if (isEmpty(city)) {
      state.animate.city = true
      state.error.city = true
      if (!isToastVisible) {
        isToastVisible = true
        this.props.handleValidationError({
          message: 'Please select destination'
        })
        this.props.animateHotelDestination(true)
      }
    }
    if (isEmpty(checkIn) || isOldDate()) {
      state.animate.chkIn = true
      state.error.chkIn = true
      if (!isToastVisible) {
        isToastVisible = true
        this.props.handleValidationError({
          message: 'Please select valid check in date'
        })
        this.props.animateHotelCheckIn(true)
      }
    }
    if (!isEmpty(state.animate)) {
      this.setState({ ...state })
      setTimeout(() => {
        this.props.animateHotelDestination(false)
        this.props.animateHotelCheckIn(false)
      }, 500)
    } else {
      this.props.handleHotelSearch()
    }
  }

  render() {
    return (
      <div className="TouchAndGo__group h-104">
        <div className="TouchAndGo__field">
          <Choose>
            <When condition={this.props.destinationType === 'hotels'}>
              <Button onClick={this.validateHotelSearchForm}>
                Check Availability
              </Button>
            </When>
            <Otherwise>
              <Button onClick={this.validateHotelSearchForm}>
                Show Hotels
              </Button>
            </Otherwise>
          </Choose>
        </div>
      </div>
    )
  }
}

Search.propTypes = {
  query: PropTypes.objectOf(PropTypes.any),
  handleValidationError: PropTypes.func,
  animateHotelDestination: PropTypes.func,
  animateHotelCheckIn: PropTypes.func
}

Search.defaultProps = {
  handleHotelSearch: () => {},
  query: {},
  handleValidationError: () => {},
  animateHotelDestination: () => {},
  animateHotelCheckIn: () => {}
}

export default Search
