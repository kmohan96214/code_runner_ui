import React, { PureComponent } from 'react'
import PropTypes from 'prop-types'
import Sheet from 'Lib/Sheet'
import shortid from 'shortid'

import Room from 'components/Hotels/Room'
import { List, ListItem } from 'Lib/List'

class Rooms extends PureComponent {
  state = {
    rooms: this.props.rooms
  }

  componentWillUpdate = nextProps => {
    if (nextProps.rooms !== this.props.rooms) {
      this.setState({
        rooms: nextProps.rooms
      })
    }
  }

  addAnotherRoom = () => {
    const room = [
      {
        adults: {
          count: 1,
          metadata: []
        },
        children: {
          count: 0,
          metadata: []
        }
      }
    ]

    this.setState({
      rooms: [...this.props.rooms, ...room]
    })
    this.props.addMoreRoom(room)
  }

  removeRoom = roomNumber => {
    const roomIndex = roomNumber - 1
    const roomsAfterRemoval = this.props.rooms.filter(
      (item, idx) => idx !== roomIndex
    )
    this.setState({
      rooms: roomsAfterRemoval
    })
    this.props.removeRoom(roomIndex)
  }

  saveToSearch = (room, roomIndex) => {
    const travellers = []
    travellers.push(room)
    this.props.saveTravellersToSearchQuery(travellers, roomIndex)
  }

  render() {
    const { rooms } = this.state
    return (
      <Sheet
        isOpen={this.props.showingTravellerSheet}
        title="Rooms & Guests"
        onClose={this.props.toggleTravellerSheet}
        secondaryAction="Done"
        secondaryActionClick={this.props.toggleTravellerSheet}
      >
        <ul>
          {rooms.map((room, index) => (
            <Room
              room={room}
              key={shortid.generate()} // eslint-disable-line
              roomNumber={index + 1}
              saveTravellersToSearchQuery={this.saveToSearch}
              removeRoom={this.removeRoom}
            />
          ))}
        </ul>

        <If condition={rooms.length < 6}>
          <List className="mt-20">
            <ListItem className="h-40 flex flex-middle flex-center">
              <span className="c-blue d-ib" onClick={this.addAnotherRoom}>
                + Add another room
              </span>
            </ListItem>
          </List>
        </If>
      </Sheet>
    )
  }
}

Rooms.propTypes = {
  showingTravellerSheet: PropTypes.bool,
  toggleTravellerSheet: PropTypes.func,
  rooms: PropTypes.arrayOf(PropTypes.any),
  saveTravellersToSearchQuery: PropTypes.func,
  addMoreRoom: PropTypes.func,
  removeRoom: PropTypes.func
}

Rooms.defaultProps = {
  showingTravellerSheet: false,
  toggleTravellerSheet: () => {},
  rooms: [],
  saveTravellersToSearchQuery: () => {},
  addMoreRoom: () => {},
  removeRoom: () => {}
}

export default Rooms
