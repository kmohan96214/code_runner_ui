import React, { Component } from 'react'

import Button from 'Lib/Buttons'
import { SectionHeader } from 'Lib/Text'
import { List, ListItem } from 'Lib/List'
import HotelsItineraryComponent from 'Components/Hotels/Itinerary/ItineraryBlock'
import { formatCurrency, isEmpty } from 'Utils'
import { HOTELS_BASE_PATH } from 'Constants/hotels/paths'
import PAYMENT_MODES from 'Constants/payments/Modes'

import Man from './icons/avatars/man.svg'
import Woman from './icons/avatars/woman.svg'
import CardIcon from './icons/cards/card.colored.svg'

import Badge from './images/confirmation_badge@2x.png'

const CURRENCY = 'INR'
class HotelConfirmation extends Component {
  _redirectToHome = () => {
    window.location.href = HOTELS_BASE_PATH
  }

  _renderPaymentDetails = (confirmationData, totalAmount = '0') => {
    const {
      paymentMode,
      cardNumber,
      walletPayment,
      fullWalletPayment,
      wau
    } = confirmationData
    return (
      <List>
        <Choose>
          <When condition={paymentMode !== 'NB' && !fullWalletPayment}>
            <ListItem className="h-56 flex flex-middle flex-between">
              <div className="flex flex-top">
                <CardIcon className="mr-10" width="21" />
                <div>
                  <p className="fs-15 c-black-90 mb-5">{cardNumber}</p>
                  <p className="fs-13 c-black-60">
                    {PAYMENT_MODES[paymentMode]}
                  </p>
                </div>
              </div>
              <div className="ta-r">
                <p className="fs-15 c-black-90 mb-5">
                  {formatCurrency(
                    parseInt(totalAmount.replace(/,/g, ''), 10) - (wau || 0)
                  )}
                </p>
              </div>
            </ListItem>
          </When>
          <When condition={paymentMode === 'NB' && !fullWalletPayment}>
            <ListItem className="h-56 flex flex-middle flex-between">
              <div className="flex flex-top">
                <div>
                  <p className="fs-15 c-black-90 mb-5">Net Banking</p>
                  <p className="fs-13 c-black-60" />
                </div>
              </div>
              <div className="ta-r">
                <p className="fs-15 c-black-90 mb-5">
                  {formatCurrency(
                    parseInt(totalAmount.replace(/,/g, ''), 10) - (wau || 0)
                  )}
                </p>
              </div>
            </ListItem>
          </When>
          <When condition={walletPayment}>
            <ListItem className="h-56 flex flex-middle flex-between">
              <div className="flex flex-top">
                <div>
                  <p className="fs-15 c-black-90 mb-5">Wallet</p>
                  <p className="fs-13 c-black-60">Cleartrip</p>
                </div>
              </div>
              <div className="ta-r">
                <p className="fs-15 c-black-90 mb-5">{formatCurrency(wau)}</p>
              </div>
            </ListItem>
          </When>
        </Choose>
      </List>
    )
  }
  _renderName = traveller => {
    const {
      name: { title, first, last }
    } = traveller
    return `${title} ${first} ${last}`
  }
  _renderAvatar = traveller => {
    if (traveller.name.title === 'Mr') {
      return <Man className="mr-10" />
    }
    return <Woman className="mr-10" />
  }
  render() {
    const { confirmationData = {} } = this.props || {}
    const {
      hotel = {},
      itinerary = {},
      totalAmount,
      tripId,
      travellers = [],
      isPostPay
    } = confirmationData
    return (
      <div>
        <List className="mt-10 mb-30">
          <ListItem className="h-96 flex flex-middle">
            <div className="w-80p">
              <h5 className="fw-600 fs-20 c-black-90 mb-5">
                Booking confirmed
              </h5>
              <p className="fs-15 c-black-70 lh-title">
                Your room at {hotel.name} has been confirmed.
              </p>
            </div>
            <img
              src={Badge}
              width="65"
              alt="Booking confirmed"
              style={{ position: 'absolute', right: '10px' }}
            />
          </ListItem>
          <ListItem className="h-40 flex flex-middle flex-between">
            <p className="fs-15 c-black-90">
              {isPostPay
                ? 'To be paid at the hotel at the time of check in'
                : 'Paid'}
            </p>
            <p className="fs-15 c-black-90">
              <If condition={!isEmpty(totalAmount)}>
                {formatCurrency(parseInt(totalAmount.replace(/,/g, ''), 10))}
              </If>
            </p>
          </ListItem>
          <ListItem className="h-40 flex flex-middle flex-between">
            <p className="fs-15 c-black-90">Trip ID</p>
            <p className="fs-15 c-black-90">{tripId}</p>
          </ListItem>
        </List>
        <HotelsItineraryComponent itineraryInfo={itinerary} hotelData={hotel} />
        <SectionHeader>Traveller Details</SectionHeader>
        <List>
          <If condition={travellers.length > 0}>
            <For each="traveller" index="index" of={travellers}>
              <ListItem
                key={index}
                className="h-56 flex flex-middle flex-between"
              >
                <div className="flex">
                  {this._renderAvatar(traveller)}
                  <div>
                    <p className="fs-15 c-black-90">
                      {this._renderName(traveller)}
                    </p>
                  </div>
                </div>
                <div className="ta-r">
                  <p className="fs-13 c-black-60">{/* PNR NUMBER */}</p>
                </div>
              </ListItem>
            </For>
          </If>
        </List>
        <SectionHeader>Payment Details</SectionHeader>
        {this._renderPaymentDetails(confirmationData, totalAmount)}
        <div className="mt-30 mb-30 pl-16 pr-16">
          <Button type="secondary" onClick={this._redirectToHome}>
            Back to home
          </Button>
        </div>
      </div>
    )
  }
}

export default HotelConfirmation
