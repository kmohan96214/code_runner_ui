import React, { PureComponent } from 'react'
import PropTypes from 'prop-types'
import className from 'classnames'
import { ListItem } from 'Lib/List'
import { Shake } from 'Lib/Animate'

class TravellerListItem extends PureComponent {
  constructor(props) {
    super(props)
    this.state = {
      animate: false,
      error: false
    }
  }

  _handleTravellerDataClick = () => {
    this.setState({ error: false })
    const { uniqueId } = this.props
    this.props.onTravellersClick(uniqueId)
  }

  _isValidTraveller = () => {
    const { displayName } = this.props
    if (
      displayName.indexOf('Adult') !== -1 ||
      displayName.indexOf('Child') !== -1 ||
      displayName.indexOf('Sr') !== -1
    ) {
      this.setState({
        animate: true,
        error: true
      })
      setTimeout(() => {
        this.setState({
          animate: false
        })
      }, 500)
    }
  }

  render() {
    if (this.props.validateTravellersDetails) {
      this._isValidTraveller()
    }
    const classNames = className('fs-15 c-black-90 d-ib', {
      'c-red': this.state.error,
      'c-black-90': !this.state.error
    })
    return (
      <ListItem
        arrow={true}
        className="h-48 flex flex-middle"
        onClick={this._handleTravellerDataClick}
      >
        <Shake animate={this.state.animate}>
          <div className="d-b w-100p">
            <p className={classNames}>{this.props.displayName}</p>
          </div>
        </Shake>
      </ListItem>
    )
  }
}

TravellerListItem.propTypes = {
  displayName: PropTypes.string.isRequired,
  uniqueId: PropTypes.string.isRequired,
  validateTravellersDetails: PropTypes.bool.isRequired,
  onTravellersClick: PropTypes.func.isRequired
}

export default TravellerListItem
