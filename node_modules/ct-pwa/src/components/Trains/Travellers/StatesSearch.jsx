import React, { Component } from 'react'
import PropTypes from 'prop-types'

import Autocomplete from 'Lib/Autocomplete'
import { List, ListItem } from 'Lib/List'
import { isEmpty } from 'Utils/'

class StatesSearch extends Component {
  constructor(params) {
    super(params)
    const statesData = !isEmpty(this.props.statesData)
      ? this.props.statesData
          .slice(0)
          .sort((a, b) => a.state_name.localeCompare(b.state_name))
      : null
    this.state = {
      statesData: statesData || [],
      value: ''
    }
  }

  _renderItem = item => {
    return (
      <ListItem className="h-48 flex flex-middle" key={item.state_name}>
        <p>{item.state_name}</p>
      </ListItem>
    )
  }

  _renderMenu = (items, value) => {
    return <List>{items}</List>
  }

  _handleInput = (value, inputName, event) => {
    this.setState({ value })
    let newData
    if (value.length > 1) {
      const lValue = value.toLowerCase()
      const filterSearchedData = item =>
        item.state_name.toLowerCase().includes(lValue)
      newData = this.props.statesData.filter(filterSearchedData)
    } else {
      newData = this.props.statesData
    }
    this.setState({ statesData: newData })
  }

  render() {
    const { statesData: dataFromProps } = this.props
    const { statesData: dataFromState } = this.state
    const { value } = this.state
    const statesData = value ? dataFromState : dataFromProps
    return (
      <Autocomplete
        isOpen={this.props.isOpen}
        title={this.props.title}
        onClose={this.props.onClose}
        autoFocus={true}
        focusDelay={305}
        placeHolder="Search State"
        value={value}
        data={statesData}
        onChange={this._handleInput}
        onSelect={this.props.onSelect}
        renderItem={this._renderItem}
        renderMenu={this._renderMenu}
        popularData={this.props.popularData}
        recentData={this.props.recentData}
        name="gst-state"
      />
    )
  }
}

StatesSearch.propTypes = {
  /**
   * The items to display in the dropdown menu
   */
  statesData: PropTypes.arrayOf(PropTypes.object),
  /**
   * The popular items to display in the dropdown menu
   */
  popularData: PropTypes.arrayOf(PropTypes.object),
  /**
   * The recently searched items to display in the dropdown menu
   */
  recentData: PropTypes.arrayOf(PropTypes.object),
  /**
   * Arguments: `value: String, item: Any`
   *
   * Invoked when the user selects an item from the dropdown menu.
   */
  onSelect: PropTypes.func,
  isOpen: PropTypes.bool.isRequired,
  title: PropTypes.string.isRequired,
  onClose: PropTypes.func.isRequired
}

StatesSearch.defaultProps = {
  onSelect: null,
  statesData: [],
  popularData: [],
  recentData: []
}

export default StatesSearch
