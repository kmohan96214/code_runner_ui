import React, { Component } from 'react'
import PropTypes from 'prop-types'
import { ListItem } from 'Lib/List'
import { AvailabiltyBadge } from 'Lib/Badges'
import { path } from 'Utils'

class MultipleAvailability extends Component {
  shouldComponentUpdate(nextProps, nextState) {
    return false
  }
  _handleClick = qta => {
    const tatkal = path(['tatkal'], this.props)
    const general = path(['general'], this.props)
    let status
    let count
    let userConsent = false
    if (qta === 'GN') {
      status = path(['status'], general)
      count = path(['count'], general)
      userConsent = true
    }
    if (qta === 'TQ' && tatkal.status !== 'N/A' && tatkal.status !== 'Closed') {
      status = path(['status'], tatkal)
      count = path(['count'], tatkal)
      userConsent = window.confirm(
        `There is an additional charge of Rs ${tatkal.ex} for tatkal tickets`
      ) // eslint-disable-line
    }
    if (userConsent && status !== 'N/A' && status !== 'Closed') {
      this.props.handleCreateItinerary(
        this.props.date,
        status,
        count,
        qta,
        this.props.activeClass
      )
    }
  }
  _handleGeneralClick = () => {
    this._handleClick('GN')
  }
  _handleTatkalClick = () => {
    this._handleClick('TQ')
  }
  render() {
    return (
      <ListItem className="h-96 flex flex-middle flex-between">
        <p className="fs-15 c-black-90 flex-1">{this.props.formattedDate}</p>
        <div className="flex flex-column" style={{ width: '200px' }}>
          <div
            className="h-48 flex flex-row flex-between flex-middle bb"
            onClick={this._handleGeneralClick}
          >
            <p className="fs-13 c-black-40">General</p>
            <AvailabiltyBadge
              count={this.props.general.count}
              type={this.props.general.status}
            />
          </div>
          <div
            className="h-48 flex flex-row flex-between flex-middle"
            onClick={this._handleTatkalClick}
          >
            <p className="fs-13 c-black-40">Tatkal</p>
            <AvailabiltyBadge
              count={this.props.tatkal.count}
              type={this.props.tatkal.status}
            />
          </div>
        </div>
      </ListItem>
    )
  }
}

MultipleAvailability.propTypes = {
  date: PropTypes.object, //eslint-disable-line
  general: PropTypes.shape({
    count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    status: PropTypes.string
  }),
  tatkal: PropTypes.shape({
    count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    status: PropTypes.string
  }),
  handleCreateItinerary: PropTypes.func,
  activeClass: PropTypes.string.isRequired,
  formattedDate: PropTypes.string
}

MultipleAvailability.defaultProps = {
  general: {
    count: 0,
    status: ''
  },
  tatkal: {
    count: 0,
    status: ''
  },
  handleCreateItinerary: () => {},
  formattedDate: ''
}

export default MultipleAvailability
