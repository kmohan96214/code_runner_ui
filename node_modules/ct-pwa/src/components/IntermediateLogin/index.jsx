import React, { PureComponent } from 'react'
import PropTypes from 'prop-types'

import { List, ListItem } from 'Lib/List'
import Input from 'Lib/Form/Input'
import { Shake } from 'Lib/Animate'

const RippleListItem = <ListItem enableRipple={true} />

class IntermediateLogin extends PureComponent {
  constructor(props) {
    super(props)
    this.state = {
      animate: { password: false },
      error: { password: false }
    }
  }
  componentWillReceiveProps(nextProps) {
    if (
      JSON.stringify(this.props.validationState) !==
      JSON.stringify(nextProps.validationState)
    ) {
      this.setState({ ...nextProps.validationState })
    }
  }
  _handleInputChange = (value, name) => {
    this.props.setIntermediateLoginPassword({ [name]: value })
  }
  _handleInputFocus = (element, name) => {
    if (this.state.error[name]) {
      this.setState(prevState => ({
        error: { ...prevState.error, [name]: !prevState.error[name] }
      }))
    }
  }
  render() {
    return (
      <List className="bt-0">
        <Shake animate={this.state.animate.password}>
          <Input
            type="password"
            name="password"
            label="Password"
            labelClassName="fs-15 c-black-90 flex-fix"
            wrapper={RippleListItem}
            wrapperClassName="h-48 flex flex-middle"
            inputClassName="fs-15 c-black-90"
            onChange={this._handleInputChange}
            value={this.props.password}
            onFocus={this._handleInputFocus}
            autoFocus={true}
            hasError={this.state.error.password}
          />
        </Shake>
      </List>
    )
  }
}
IntermediateLogin.propTypes = {
  setIntermediateLoginPassword: PropTypes.func,
  password: PropTypes.string,
  validationState: PropTypes.objectOf(PropTypes.any)
}
IntermediateLogin.defaultProps = {
  setIntermediateLoginPassword: () => {},
  password: '',
  validationState: {}
}
export default IntermediateLogin
